@import '../functions';

@layer kol-theme-component {
	:host {
		--border-width: 1px;
		--spacing: 0.25rem;
	}

	kol-input {
		display: grid;
		align-items: center;
		justify-items: left;
		width: 100%;

		&:not(.hide-label) {
			grid-template-columns: calc(6 * var(--spacing)) auto;
		}

		&.switch:not(.hide-label) {
			grid-template-columns: calc(13 * var(--spacing)) auto;
		}

		&:has(input:focus) {
			outline: 2px solid var(--color-blue);
			outline-offset: 2px;
		}
	}

	.input-label {
		font-size: rem(18);
		font-weight: bold;
		opacity: 1; // Override conflicting component styles

		kol-input.disabled & {
			color: var(--color-disabled-gray);
		}
	}

	.input {
		display: inline-flex;
		order: 1;
	}

	.checkbox-container {
		justify-content: flex-start;
	}

	input {
		appearance: none;
		background-color: var(--color-white);
		opacity: 1; // Override conflicting component styles
		outline: none;
		transition: none; // Override conflicting component styles
	}

	.required label > span::after {
		content: '*';
		padding-left: 0.125em;
	}

	.input-label {
		order: 2;
		padding-left: calc(2 * var(--spacing));
	}

	.error {
		order: 3;
		padding-top: 0.25em;
		grid-column: span 2 / auto;
	}

	/* variant default */
	.default {
		.checkbox-input-element {
			border-radius: 2px;
			border: var(--border-width) solid var(--color-primary);
			height: calc(6 * var(--spacing));
			min-width: calc(6 * var(--spacing));
			width: calc(6 * var(--spacing));

			&:is(:checked, :indeterminate) {
				background-color: var(--color-primary);
				border-color: var(--color-primary);
			}

			&:disabled {
				border-color: var(--color-disabled-gray);
				background-color: var(--color-secondary-40);
			}

			&:enabled:hover {
				outline: 1px solid var(--color-primary); /* Increase visual border-width without shifting contents */
			}
			&:enabled:hover:is(:checked, :indeterminate) {
				background: var(--color-white);
				outline-color: var(--color-primary-60);
				border-color: var(--color-primary-60);
			}
		}

		.icon {
			margin-left: rem(4); // visually align
		}
		&:has(.checkbox-input-element:indeterminate) .icon::part(icon) {
			transform: translateY(rem(-3)); // visually align

			&::before {
				content: '\\';
				font-family: var(--font-family);
			}
		}
		&:has(.checkbox-input-element:is(:checked, :indeterminate)) .icon {
			color: var(--color-white);
		}
		&:has(.checkbox-input-element:is(:checked, :indeterminate):enabled:hover) .icon {
			color: var(--color-primary-60);
		}
		&:has(.checkbox-input-element:is(:checked, :indeterminate):disabled) .icon {
			color: var(--color-disabled-gray);
		}
	}

	/* variant switch */
	.switch {
		input[type='checkbox'] {
			border-radius: 1.7em;
			border-width: 1px;
			border-color: var(--color-primary);
			transition:
				0.5s background-color,
				border-color;

			&:enabled:hover {
				border-color: var(--color-primary-60);
			}
			&:is(:checked, :indeterminate):enabled {
				background: var(--color-primary);
			}
			&:is(:checked, :indeterminate):enabled:hover {
				background: var(--color-primary-60);
			}
			&:disabled {
				border-color: var(--color-secondary);
			}
			&:is(:checked, :indeterminate):disabled {
				background: var(--color-secondary-40);
			}

			&::before {
				background: var(--color-white);
				border: 1px solid var(--color-primary);
				border-radius: 50%;
				height: 1.55em;
				width: 1.55em;
				left: 0;
				top: -1px;
				transform: translateX(-1px);
			}
			&:indeterminate::before {
				transform: translateX(calc(50% - 2px));
			}
			&:checked::before {
				transform: translateX(calc(100% - 4px));
			}
			&:enabled:hover::before {
				border-color: var(--color-primary-60);
			}
			&:disabled::before {
				background: var(--color-secondary-40);
				border-color: var(--color-secondary);
			}
		}

		.icon {
			display: none;
		}
	}
}
